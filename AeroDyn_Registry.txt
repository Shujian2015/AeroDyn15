###################################################################################################################################
# Registry for AeroDyn 15 in the FAST Modularization Framework
# This Registry file is used to create AeroDyn_Types which contains data used in the AeroDyn module.
# It also contains copy, destroy, pack, and unpack routines associated with each defined data types.
# See the NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword>	<ModuleName/ModName>	<TypeName>	<FieldType>	<FieldName>	<Dims>	<IO>	<DNAME>	<DESCRIP>	<UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# File last committed $Date: 2015-10-03 21:17:42 -0600 (Sat, 03 Oct 2015) $
# (File) Revision #: $Rev: 166 $
# URL: $HeadURL: https://windsvn.nrel.gov/WT_Perf/branches/v4.x/Source/dependencies/AeroDyn/AeroDyn_Registry.txt $
# Modified by Shujian Liu, Dec 12, 2015 (These lines are commented with "Umass WINDS")
###################################################################################################################################
# ...... Include files (definitions from NWTC Library) ............................................................................
include	Registry_NWTC_Library.txt
usefrom	AirfoilInfo_Registry.txt
usefrom	BEMT_Registry.txt
usefrom	UnsteadyAero_Registry.txt




### Umass WINDS starts:
# BEMParms
typedef	AeroDyn/AD	BEMParms	DbKi	TOL	-	-	-	"Tolerance"
typedef	^	BEMParms	IntKi	MAX_ITER	-	-	-	
typedef	^	BEMParms	DbKi	WT	-	-	-	"Weighting factor on corrections to balance speed with stability"

# TreeParms
typedef	AeroDyn/AD	TreeParms	LOGICAL	TreeFlag	-	-	-	"Whether use treecode algorithm"
typedef	^	TreeParms	IntKi	cores	-	-	-
typedef	^	TreeParms	DbKi	theta	-	-	-	
typedef	^	TreeParms	IntKi	order	-	-	-
typedef	^	TreeParms	IntKi	maxparnode	-	-	-
typedef	^	TreeParms	DbKi	dist_tol	-	-	-
typedef	^	TreeParms	DbKi	delta	-	-	-
typedef	^	TreeParms	LOGICAL	Speedup	-	-	-
typedef	^	TreeParms	CHARACTER(4)	Freq	-	-	-

# OpenMPParms
typedef	AeroDyn/AD	OpenMPParms	LOGICAL	Accelerate	-	-	-	"Whether use OpenMP"
typedef	^	OpenMPParms	IntKi	OpenMPCores	-	-	-

# GPUParms
typedef	AeroDyn/AD	GPUParms	LOGICAL	Accelerate	-	-	-	"Whether use treecode algorithm/GPU"
typedef	^	GPUParms	LOGICAL	Speedup	-	-	-	
typedef	^	GPUParms	LOGICAL	GPUFlag	-	-	-	"Whether use GPU"
typedef	^	GPUParms	IntKi	GPUHW	{3}	-	-	"[Thread Count, Number of GPUs, GPU Device Indices]"
typedef	^	GPUParms	CHARACTER(4)	GPURUN	-	-	-	"'fuln' or ...."
typedef	^	GPUParms	LOGICAL	OMP	-	-	-	

# TwrParms
typedef	AeroDyn/AD	TwrParms	LOGICAL	TWRFLAG	-	-	-	"Tower: Include induced velocity from tower effects (true or false)"
typedef	^	TwrParms	IntKi	TWRUPDOWN	-	-	-	"Tower: Upwind rotor=1, Downwind rotor=2"
typedef	^	TwrParms	IntKi	TWRMETHOD	-	-	-	"Tower: Basic potential flow=1, Aerodyn=2"

# GroundParms
typedef	AeroDyn/AD	GroundParms	LOGICAL	GroundFLAG	-	-	-	"Include vortex panels to model ground effects (true or false)"
typedef	^	GroundParms	CHARACTER(5)	Method	-	-	-	"Can be 'IMAGE' or 'PANEL'"
typedef	^	GroundParms	LOGICAL	Saved_Geometry	-	-	-	"Use previously saved ground geometry and influence coeff matrix if 'panel'"
typedef	^	GroundParms	IntKi	Sqrt_Panels	-	-	-	"Square root of the number of panels (i.e. single dimension of panel matrix)"
typedef	^	GroundParms	IntKi	Extent	{4}	-	-	"[xmin xmax ymin ymax]"

# WindShearParms
typedef	AeroDyn/AD	WindShearParms	LOGICAL	ShearFLAG	-	-	-
typedef	^	WindShearParms	IntKi	model_type	-	-	-	"power law = 1, log law = 2, log law with stability = 3"
typedef	^	WindShearParms	DbKi	z_ref	-	-	-	"height at which wind.infty is defined"
typedef	^	WindShearParms	DbKi	alpha	-	-	-	"power law exponent"
typedef	^	WindShearParms	DbKi	z0	-	-	-	"roughness length"

# RLVortexModel
typedef	AeroDyn/AD	RLVortexModel	DbKi	ALPHA	-	-	-
typedef	^	RLVortexModel	DbKi	NU	-	-	-
typedef	^	RLVortexModel	DbKi	DELTA	-	-	-
typedef	^	RLVortexModel	DbKi	A1	-	-	-

# DSParms
typedef	AeroDyn/AD	DSParms	LOGICAL	DS_Flag	-	-	-
typedef	^	DSParms	LOGICAL	relax_tune	-	-	-
typedef	^	DSParms	DbKi	start_t	-	-	-
typedef	^	DSParms	IntKi	start_n	-	-	-
typedef	^	DSParms	LOGICAL	load_data	-	-	-
typedef	^	DSParms	CHARACTER(1024)	load_file	-	-	-
#typedef	^	DSParms	IntKi	af_select	-	-	-	
#typedef	^	DSParms	IntKi	f_mdl	-	-	-	
typedef	^	DSParms	DbKi	indicial	{4}	-	-	
typedef	^	DSParms	DbKi	time_const	{4}	-	-
typedef	^	DSParms	LOGICAL	write_data	-	-	-	

# FVMParmsTYPE
typedef	AeroDyn/AD	FVMParmsTYPE	LOGICAL	UseWINDS	-	-	-	"Whether to use winds"
typedef	^	FVMParmsTYPE	LOGICAL	WINDS_Sum	-	-	-	"Whether to write summary for winds"
typedef	^	FVMParmsTYPE	CHARACTER(1024)	WINDS_dir	-	-	-	
typedef	^	FVMParmsTYPE	IntKi	Total_Time	-	-	-	
typedef	^	FVMParmsTYPE	IntKi	NB	-	-	-	"Number of blades"
typedef	^	FVMParmsTYPE	IntKi	NS	-	-	-	"Number of spanwise stations"
typedef	^	FVMParmsTYPE	IntKi	NST	-	-	-	"Number of spanwise stations + 1"
typedef	^	FVMParmsTYPE	IntKi	NT	-	-	-	"Total timesteps: count from 1"
typedef	^	FVMParmsTYPE	IntKi	NTP	-	-	-	"Number of time steps stored in the arrays. To keep memory reasonable, usually ~3-4."
typedef	^	FVMParmsTYPE	IntKi	DT_RATIO	-	-	-	"DT_WINDS / DT_AERODYN"
typedef	^	FVMParmsTYPE	DbKi	DT_WINDS	-	-	-	
typedef	^	FVMParmsTYPE	LOGICAL	SteadyFlag	-	-	-	"Whether steady inflow wind"
typedef	^	FVMParmsTYPE	LOGICAL	WakeFLAG	-	-	-	
typedef	^	FVMParmsTYPE	LOGICAL	Roll	-	-	-	"Whether to apply induction to all wake nodes"
typedef	^	FVMParmsTYPE	IntKi	RollDist	-	-	-	
typedef	^	FVMParmsTYPE	IntKi	NTW_total	-	-	-
typedef	^	FVMParmsTYPE	IntKi	WakeDist	-	-	-	
typedef	^	FVMParmsTYPE	IntKi	WakeNum	-	-	-	
typedef ^   FVMParmsTYPE    DbKi    AveSpeed    -   -   -
typedef ^   FVMParmsTYPE    LOGICAL uindpast    -   -   -   
typedef	^	FVMParmsTYPE	LOGICAL	ViscFLAG	-	-	-	"Whether viscous model for filaments"
typedef	^	FVMParmsTYPE	IntKi	VISC	-	-	-	"Index of Vatistas viscous model"
typedef	^	FVMParmsTYPE	DbKi	DELTA	-	-	-	"Smoothing parameter when no viscous model for filaments"
typedef	^	FVMParmsTYPE	CHARACTER(3)	INTEG	-	-	-	"Numerical integration scheme"
typedef	^	FVMParmsTYPE	DbKi	TOL	-	-	-	"Tolerance value for convergence of numerical methods"
typedef	^	FVMParmsTYPE	DbKi	CO	-	-	-	"Distance from wake nodes beyond which influence is negligible (useful??)"
typedef	^	FVMParmsTYPE	DbKi	RELAX	-	-	-	"Relaxation value for fixed-point iteration"
typedef	^	FVMParmsTYPE	IntKi	MAXITER	-	-	-	"Maximum number of iterations for Kutta-Joukowski theorem"
typedef	^	FVMParmsTYPE	LOGICAL	extrap_wake	-	-	-	"Use quadratic extrapolation to guess next bound vorticity value, otherwise use previous value as initial guess"
typedef	^	FVMParmsTYPE	LOGICAL	KJ_output	-	-	-	"Whether to ouput the KJ iteration number"
typedef	^	FVMParmsTYPE	LOGICAL	element_output	-	-	-	"Whether to ouput the blade elements' aoa"
typedef	^	FVMParmsTYPE	CHARACTER(15)	CURRENT_TIME	-	-	-	"Date and time of code execution"
typedef	^	FVMParmsTYPE	LOGICAL	AnimFLAG	-	-	-	"If true, will generate animation of wake evolution"
typedef	^	FVMParmsTYPE	CHARACTER(1024)	AnimRootDIR	-	-	-	"Root directory for paraview visualizations"
typedef	^	FVMParmsTYPE	BEMParms	BEM_Parms	-	-	-	
typedef	^	FVMParmsTYPE	OpenMPParms	OpenMP_Parms	-	-	-	
typedef	^	FVMParmsTYPE	TreeParms	Tree_Parms	-	-	-	
#typedef	^	FVMParmsTYPE	GPUParms	GPU_Parms	-	-	-	"Variables related to Parallel/GPU computing"
typedef	^	FVMParmsTYPE	TwrParms	Twr_Parms	-	-	-	"Variables for tower shadow"
typedef	^	FVMParmsTYPE	GroundParms	Ground_Parms	-	-	-	"Variables for ground effects inclusion"
typedef	^	FVMParmsTYPE	WindShearParms	Shear_Parms	-	-	-	
typedef	^	FVMParmsTYPE	RLVortexModel	RL_Model	-	-	-	"Constants associated with Ramasamy-Leishman vortex model"
typedef	^	FVMParmsTYPE	DSParms	DS_Parms	-	-	-	"Dynamic Stall model"
typedef	^	FVMParmsTYPE	DbKi	RHO	-	-	-	"Atmospheric density (Standard at MSL)"
typedef	^	FVMParmsTYPE	DbKi	Gravity	-	-	-	
typedef	^	FVMParmsTYPE	DbKi	TURBINE_ShftTilt	-	-	-	

# Ground_other
typedef	AeroDyn/AD	Ground_other	IntKi	Np	-	-	-	"square root of number of panels"
typedef	^	Ground_other	IntKi	x_min	-	-	-	
typedef	^	Ground_other	IntKi	x_max	-	-	-
typedef	^	Ground_other	DbKi	dx	-	-	-
typedef	^	Ground_other	IntKi	xp	{:}{1}	-	-
typedef	^	Ground_other	IntKi	y_min	-	-	-	
typedef	^	Ground_other	IntKi	y_max	-	-	-
typedef	^	Ground_other	DbKi	dy	-	-	-
typedef	^	Ground_other	IntKi	yp	{:}{:}	-	-
typedef	^	Ground_other	IntKi	zp	{:}{1}	-	-
typedef	^	Ground_other	DbKi	xp_mesh	{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	yp_mesh	{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	zp_mesh	{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	co	-	-	-
typedef	^	Ground_other	DbKi	Gamma	{:}{:}	-	-
typedef	^	Ground_other	DbKi	p	{:}{:}	-	-
typedef	^	Ground_other	DbKi	b	{:}{:}	-	-
typedef	^	Ground_other	DbKi	n_vec	{:}{3}	-	-
typedef	^	Ground_other	DbKi	P_source	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	gamma_grid	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	rc_grid	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	grid_righttop	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	grid_rightbottom	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	grid_leftbottom	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	grid_lefttop	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_top_main	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_right_main	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_bottom_main	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_left_main	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_top_kj	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_right_kj	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_bottom_kj	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_ind_left_kj	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	V_n	{:}{:}	-	-	
typedef	^	Ground_other	DbKi	Vind_mirtmp_SHED	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	Vind_mirtmp_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	VindB_mirtmp_SHED	{:}{:}{:}{:}{:}	-	-	
typedef	^	Ground_other	DbKi	VindB_mirtmp_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	MIRROR	{:}{:}{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	WAKE_MIRROR	{:}{:}{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	GAMMA_SHED_MIRROR	{:}{:}{:}{:}{:}	-	-
typedef	^	Ground_other	DbKi	GAMMA_TRAIL_MIRROR	{:}{:}{:}{:}{:}	-	-

# KJ_iter
typedef	AeroDyn/AD	KJ_iter	DbKi	RELAX		-	-
typedef	^	KJ_iter	DbKi	DG	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	GAMMA1	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	CL	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	CD	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	CM	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	VEL_ROT	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	VEL_TOT	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	U	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	V	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	W	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	Vinf	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	Vtot	{:}{:}{:}{:}{:}	-	-
typedef	^	KJ_iter	DbKi	AOA	{:}{:}{:}{:}{:}	-	-

# DS_other
typedef	AeroDyn/AD	DS_other	DbKi	global_previous_alpha	{:}{:}	-	-
typedef	^	DS_other	DbKi	global_current_alpha	{:}{:}	-	-
typedef	^	DS_other	DbKi	global_previous_sigma1	{:}{:}	-	-
typedef	^	DS_other	DbKi	global_current_sigma1	{:}{:}	-	-
typedef	^	DS_other	DbKi	global_previous_sigma3	{:}{:}	-	-
typedef	^	DS_other	DbKi	global_current_sigma3	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_X1	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_X1	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_X2	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_X2	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_K_alpha	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_K_alpha	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_dK_alpha	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_dK_alpha	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_K_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_K_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_dK_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_dK_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_ddK_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_ddK_q	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_previous_C_p_n	{:}{:}	-	-
typedef	^	DS_other	DbKi	attached_current_C_p_n	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_previous_D_p	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_current_D_p	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_previous_D_f	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_current_D_f	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_previous_f_prime	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_current_f_prime	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_previous_f_2prime	{:}{:}	-	-
typedef	^	DS_other	DbKi	TEsep_current_f_2prime	{:}{:}	-	-
typedef	^	DS_other	DbKi	LEsep_previous_tau_v	{:}{:}	-	-
typedef	^	DS_other	DbKi	LEsep_current_tau_v	{:}{:}	-	-
typedef	^	DS_other	DbKi	LEsep_previous_C_v_n	{:}{:}	-	-
typedef	^	DS_other	DbKi	LEsep_current_C_v_n	{:}{:}	-	-
typedef	^	DS_other	DbKi	LEsep_previous_C_v	{:}{:}	-	-
typedef	^	DS_other	DbKi	LEsep_current_C_v	{:}{:}	-	-
typedef	^	DS_other	DbKi	global_sigma2	{:}{:}	-	-
typedef	^	DS_other	IntKi	LEsep_vortex_shed_start	{:}{:}	-	-
typedef	^	DS_other	IntKi	LEsep_seperating	{:}{:}	-	-
typedef	^	DS_other	IntKi	global_ca_mdl_change	{:}{:}	-	-
typedef	^	DS_other	IntKi	global_ca_mdl	{:}{:}{:}	-	-
typedef	^	DS_other	IntKi	global_ca_mdl_over_write	{:}{:}	-	-


# airfoils_LB
typedef	AeroDyn/AD	airfoils_LB	DbKi	A1	{:}	-	-
typedef	^	airfoils_LB	DbKi	A2	{:}	-	-
typedef	^	airfoils_LB	DbKi	b1	{:}	-	-
typedef	^	airfoils_LB	DbKi	b2	{:}	-	-
typedef	^	airfoils_LB	DbKi	Tp	{:}	-	-
typedef	^	airfoils_LB	DbKi	Tf	{:}	-	-
typedef	^	airfoils_LB	DbKi	Tv	{:}	-	-
typedef	^	airfoils_LB	DbKi	Tvl	{:}	-	-
typedef	^	airfoils_LB	DbKi	cn	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	ca	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	Cn_alpha	{:}	-	-
typedef	^	airfoils_LB	DbKi	Alpha_0	{:}	-	-
typedef	^	airfoils_LB	DbKi	C_d_0	{:}	-	-
typedef	^	airfoils_LB	DbKi	C_m_0	{:}	-	-
typedef	^	airfoils_LB	DbKi	C_n_0	{:}	-	-
typedef	^	airfoils_LB	DbKi	alpha_1	{:}	-	-
typedef	^	airfoils_LB	DbKi	alpha_2	{:}	-	-
typedef	^	airfoils_LB	DbKi	a	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	S	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	c	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	recovery_factor	{:}	-	-
typedef	^	airfoils_LB	DbKi	C_n_1	{:}	-	-
typedef	^	airfoils_LB	DbKi	C_n_2	{:}	-	-
typedef	^	airfoils_LB	DbKi	ca_K1	{:}	-	-
typedef	^	airfoils_LB	DbKi	aoa_KHn	{:}	-	-
typedef	^	airfoils_LB	DbKi	aoa_KHp	{:}	-	-
typedef	^	airfoils_LB	IntKi	pp_size	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_f_breaks	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_f_coefs	{:}{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_K_Ca_breaks	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_K_Ca_coefs	{:}{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_K_Cn_breaks	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_K_Cn_coefs	{:}{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_K_Cm_breaks	{:}{:}	-	-
typedef	^	airfoils_LB	DbKi	pp_K_Cm_coefs	{:}{:}{:}	-	-

# Time_other
typedef	AeroDyn/AD	Time_other	DbKi	Time_Total	-	-	-
typedef	^	Time_other	DbKi	Time_biotsavart	-	-	-	
typedef	^	Time_other	DbKi	Time_biotsavart_Acce	-	-	-	

# FVM_OtherStateTYPE
typedef	AeroDyn/AD	FVM_OtherStateTYPE	CHARACTER(1024)	FullDIR	-	-	-	
typedef	^	FVM_OtherStateTYPE	DbKi	POS_AEROCENT	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_LEAD	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_BOUND	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_COLLOC	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_QUARTER	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_END	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_NODES_BXN	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_NODES_BYN	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	POS_NODES_BZN	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_CL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_CD	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_AOA	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_PHI	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_A	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_AAP	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_AP	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_TSR	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_DCZ	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_DCX	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	PERF_CM	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_AEROCENT	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_BOUND	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_BLADE	{:}{:}{:}{:}{:}	-	
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_DOMAIN	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_DOMAIN_RK	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_RK	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_GROUND	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB_GROUND	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_MIRROR	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB_MIRROR	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB_TRAIL_pre	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UINDB_SHED_pre	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_SHED_GROUND_P	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_TRAIL_GROUND_P	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_GROUND_P	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	VEL_UIND_TOWER	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_DOMAIN	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_RE_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_RE_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_RC_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_RC_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_LENGTH_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_LENGTH_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_RC_EFF_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_RC_EFF_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_GAMMA_SHED	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_GAMMA_TRAIL	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WIND_INFTY	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	WIND_INFTYM	{:}{:}{:}{:}{:}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	Wind_Mean {3}	-	-	"If steady inflow, the mean wind speed"
typedef	^	FVM_OtherStateTYPE	DbKi	StoredForces	{:}{:}{:}{:}{:}	-	-	"Aerodynamic forces"
typedef	^	FVM_OtherStateTYPE	DbKi	StoredMoments	{:}{:}{:}{:}{:}	-	-	"Aerodynamic Moments"
typedef	^	FVM_OtherStateTYPE	DbKi	PreviousForces	{:}{:}{:}{:}{:}	-	-	"Aerodynamic forces"
typedef	^	FVM_OtherStateTYPE	DbKi	PreviousMoments	{:}{:}{:}{:}{:}	-	-	"Aerodynamic Moments"
typedef	^	FVM_OtherStateTYPE	DbKi	TipSpdRat	-	-	-	
typedef	^	FVM_OtherStateTYPE	DbKi	AzimuthAngle	-	-	-	
typedef	^	FVM_OtherStateTYPE	DbKi	WAKE_R0	{:}	-	-	
typedef	^	FVM_OtherStateTYPE	IntKi	RK_counter	-	-	-	
typedef	^	FVM_OtherStateTYPE	Ground_other	Ground	-	-	-	
typedef	^	FVM_OtherStateTYPE	KJ_iter	KJ	-	-	-	
typedef	^	FVM_OtherStateTYPE	DS_other	DS	-	-	-	
typedef	^	FVM_OtherStateTYPE	airfoils_LB	airfoils_LB	-	-	-	
typedef	^	FVM_OtherStateTYPE	Time_other	TIME	-	-	-	"timer for debug or research"
typedef	^	FVM_OtherStateTYPE	IntKi	NTW	-	-	-	
typedef	^	FVM_OtherStateTYPE	IntKi	ntroll	-	-	-	
typedef	^	FVM_OtherStateTYPE	IntKi	StrtTime	{8}	-	-	
typedef	^	FVM_OtherStateTYPE	DbKi	UsrTime1	-	-	-	
typedef	^	FVM_OtherStateTYPE	DbKi	UsrTime2	-	-	-	
typedef	^	FVM_OtherStateTYPE	IntKi	SimStrtTime	{8}	-	-
typedef	^	FVM_OtherStateTYPE	DbKi	ZTime	-	-	-	"The current simulation time (actual or time of prediction)"
### Umass WINDS ends
















# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
typedef	AeroDyn/AD	InitInputType	CHARACTER(1024)	InputFile	-	-	-	"Name of the input file"	-
typedef	^	InitInputType	IntKi	NumBlades	-	-	-	"Number of blades on the turbine"
typedef	^	InitInputType	CHARACTER(1024)	RootName	-	-	-	"RootName for writing output files"	-
typedef	^	InitInputType	ReKi	HubPosition	{3}	-	-	"X-Y-Z reference position of hub"	m
typedef	^	InitInputType	R8Ki	HubOrientation	{3}{3}	-	-	"DCM reference orientation of hub"	-
typedef	^	InitInputType	ReKi	BladeRootPosition	{:}{:}	-	-	"X-Y-Z reference position of each blade root (3 x NumBlades)"	m
typedef	^	InitInputType	R8Ki	BladeRootOrientation	{:}{:}{:}	-	-	"DCM reference orientation of blade roots (3x3 x NumBlades)"	-

# Define outputs from the initialization routine here:
typedef	^	InitOutputType	CHARACTER(ChanLen)	WriteOutputHdr	{:}	-	-	"Names of the output-to-file channels"	-
typedef	^	InitOutputType	CHARACTER(ChanLen)	WriteOutputUnt	{:}	-	-	"Units of the output-to-file channels"	-
typedef	^	InitOutputType	ProgDesc	Ver	-	-	-	"This module's name, version, and date"	-
typedef	^	InitOutputType	ReKi	AirDens	-	-	-	"Air density"	kg/m^3

# ..... Input file data ...........................................................................................................
# This is data defined in the Input File for this module (or could otherwise be passed in)
# ..... Blade Input file data .....................................................................................................
typedef	^	AD_BladePropsType	IntKi	NumBlNds	-	-	-	"Number of blade nodes used in the analysis"	-
typedef	^	AD_BladePropsType	ReKi	BlSpn	{:}	-	-	"Span at blade node"	m
typedef	^	AD_BladePropsType	ReKi	BlCrvAC	{:}	-	-	"Curve at blade node"	m
typedef	^	AD_BladePropsType	ReKi	BlSwpAC	{:}	-	-	"Sweep at blade node"	m
typedef	^	AD_BladePropsType	ReKi	BlCrvAng	{:}	-	-	"Curve angle at blade node"	radians
typedef	^	AD_BladePropsType	ReKi	BlTwist	{:}	-	-	"Twist at blade node"	radians
typedef	^	AD_BladePropsType	ReKi	BlChord	{:}	-	-	"Chord at blade node"	m
typedef	^	AD_BladePropsType	IntKi	BlAFID	{:}	-	-	"ID of Airfoil at blade node"	-





# ..... Primary Input file data ...................................................................................................
typedef	^	AD_InputFile	DbKi	DTAero	-	-	-	"Time interval for aerodynamic calculations {or "default"}"	s
typedef	^	AD_InputFile	IntKi	WakeMod	-	-	-	"Type of wake/induction model {0=none, 1=BEMT}"	-
typedef	^	AD_InputFile	IntKi	AFAeroMod	-	-	-	"Type of blade airfoil aerodynamics model {1=steady model, 2=Beddoes-Leishman unsteady model}"	-
typedef	^	AD_InputFile	IntKi	TwrPotent	-	-	-	"Type tower influence on wind based on potential flow around the tower {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}"	-
typedef	^	AD_InputFile	LOGICAL	TwrShadow	-	-	-	"Calculate tower influence on wind based on downstream tower shadow?"	-
typedef	^	AD_InputFile	LOGICAL	TwrAero	-	-	-	"Calculate tower aerodynamic loads?"	flag
typedef	^	AD_InputFile	ReKi	AirDens	-	-	-	"Air density"	kg/m^3
typedef	^	AD_InputFile	ReKi	KinVisc	-	-	-	"Kinematic air viscosity"	m^2/s
typedef	^	AD_InputFile	ReKi	SpdSound	-	-	-	"Speed of sound"	m/s
typedef	^	AD_InputFile	IntKi	SkewMod	-	-	-	"Type of skewed-wake correction model {1=uncoupled, 2=Pitt/Peters, 3=coupled} [used only when WakeMod=1]"	-
typedef	^	AD_InputFile	LOGICAL	TipLoss	-	-	-	"Use the Prandtl tip-loss model? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	HubLoss	-	-	-	"Use the Prandtl hub-loss model? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	TanInd	-	-	-	"Include tangential induction in BEMT calculations? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	AIDrag	-	-	-	"Include the drag term in the axial-induction calculation? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	TIDrag	-	-	-	"Include the drag term in the tangential-induction calculation? [used only when WakeMod=1 and TanInd=TRUE]"	flag
typedef	^	AD_InputFile	ReKi	IndToler	-	-	-	"Convergence tolerance for BEM induction factors [used only when WakeMod=1]"	-
typedef	^	AD_InputFile	ReKi	MaxIter	-	-	-	"Maximum number of iteration steps [used only when WakeMod=1]"	-
typedef	^	AD_InputFile	IntKi	UAMod	-	-	-	"Unsteady Aero Model Switch (switch) {1=Baseline model (Original), 2=Gonzalez's variant (changes in Cn,Cc,Cm), 3=Minemma/Pierce variant (changes in Cc and Cm)} [used only when AFAreoMod=2]"	-
typedef	^	AD_InputFile	LOGICAL	FLookup	-	-	-	"Flag to indicate whether a lookup for f' will be calculated (TRUE) or whether best-fit exponential equations will be used (FALSE); if FALSE S1-S4 must be provided in airfoil input files [used only when AFAreoMod=2]"	flag
typedef	^	AD_InputFile	ReKi	InCol_Alfa	-	-	-	"The column in the airfoil tables that contains the angle of attack"	-
typedef	^	AD_InputFile	ReKi	InCol_Cl	-	-	-	"The column in the airfoil tables that contains the lift coefficient"	-
typedef	^	AD_InputFile	ReKi	InCol_Cd	-	-	-	"The column in the airfoil tables that contains the drag coefficient"	-
typedef	^	AD_InputFile	ReKi	InCol_Cm	-	-	-	"The column in the airfoil tables that contains the pitching-moment coefficient; use zero if there is no Cm column"	-
typedef	^	AD_InputFile	ReKi	InCol_Cpmin	-	-	-	"The column in the airfoil tables that contains the drag coefficient; use zero if there is no Cpmin column"	-
typedef	^	AD_InputFile	IntKi	NumAFfiles	-	-	-	"Number of airfoil files used"	-
typedef	^	AD_InputFile	CHARACTER(1024)	AFNames	{:}	-	-	"Airfoil file names (NumAF lines)"	"quoted strings"
typedef	^	AD_InputFile	LOGICAL	UseBlCm	-	-	-	"Include aerodynamic pitching moment in calculations?"	flag
#typedef	^	AD_InputFile	IntKi	NumBlNds	-	-	-	"Number of blade nodes used in the analysis"	-
typedef	^	AD_InputFile	AD_BladePropsType	BladeProps	{:}	-	-	"blade property information from blade input files"	-
typedef	^	AD_InputFile	IntKi	NumTwrNds	-	-	-	"Number of tower nodes used in the analysis"	-
typedef	^	AD_InputFile	ReKi	TwrElev	{:}	-	-	"Elevation at tower node"	m
typedef	^	AD_InputFile	ReKi	TwrDiam	{:}	-	-	"Diameter of tower at node"	m
typedef	^	AD_InputFile	ReKi	TwrCd	{:}	-	-	"Coefficient of drag at tower node"	-
typedef	^	AD_InputFile	LOGICAL	SumPrint	-	-	-	"Generate a summary file listing input options and interpolated properties to "<rootname>.AD.sum"?"	flag
typedef	^	AD_InputFile	IntKi	NBlOuts	-	-	-	"Number of blade node outputs [0 - 9]"	-
typedef	^	AD_InputFile	IntKi	BlOutNd	{9}	-	-	"Blade nodes whose values will be output"	-
typedef	^	AD_InputFile	IntKi	NTwOuts	-	-	-	"Number of tower node outputs [0 - 9]"	-
typedef	^	AD_InputFile	IntKi	TwOutNd	{9}	-	-	"Tower nodes whose values will be output"	-
typedef	^	AD_InputFile	IntKi	NumOuts	-	-	-	"Number of parameters in the output list (number of outputs requested)"	-
typedef	^	AD_InputFile	CHARACTER(ChanLen)	OutList	{:}	-	-	"List of user-requested output channels"	-

# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef	^	ContinuousStateType	BEMT_ContinuousStateType	BEMT	-	-	-	"Continuous states from the BEMT module"	-

# Define discrete (nondifferentiable) states here:
typedef	^	DiscreteStateType	BEMT_DiscreteStateType	BEMT	-	-	-	"Discrete states from the BEMT module"	-

# Define constraint states here:
typedef	^	ConstraintStateType	BEMT_ConstraintStateType	BEMT	-	-	-	"Constraint states from the BEMT module"	-

# Define "other" states (any data that are not considered actual states) here:
typedef	^	OtherStateType	BEMT_OtherStateType	BEMT	-	-	-	"OtherStates from the BEMT module"	-
typedef	^	OtherStateType	BEMT_OutputType	BEMT_y	-	-	-	"Outputs from the BEMT module"	-
typedef	^	OtherStateType	BEMT_InputType	BEMT_u	-	-	-	"Inputs to the BEMT module"	-
typedef	^	OtherStateType	ReKi	DisturbedInflow	{:}{:}{:}	-	-	"InflowOnBlade values modified by tower influence"	m/s
typedef	^	OtherStateType	ReKi	WithoutSweepPitchTwist	{:}{:}{:}{:}	-	-	"Coordinate system equivalent to BladeMotion Orientation, but without live sweep, blade-pitch, and twist angles"	-
typedef	^	OtherStateType	ReKi	AllOuts	{:}	-	-	"An array holding the value of all of the calculated (not only selected) output channels"	-
typedef	^	OtherStateType	ReKi	W_Twr	{:}	-	-	"relative wind speed normal to the tower at node j"	m/s
typedef	^	OtherStateType	ReKi	X_Twr	{:}	-	-	"local x-component of force per unit length of the jth node in the tower"	m/s
typedef	^	OtherStateType	ReKi	Y_Twr	{:}	-	-	"local y-component of force per unit length of the jth node in the tower"	m/s
typedef	^	OtherStateType	ReKi	Curve	{:}{:}	-	-	"curvature angle, saved for possible output to file"	rad
typedef	^	OtherStateType	ReKi	X	{:}{:}	-	-	"normal force per unit length (normal to the plane, not chord) of the jth node in the kth blade"	N/m
typedef	^	OtherStateType	ReKi	Y	{:}{:}	-	-	"tangential force per unit length (tangential to the plane, not chord) of the jth node in the kth blade"	N/m
typedef	^	OtherStateType	ReKi	M	{:}{:}	-	-	"pitching moment per unit length of the jth node in the kth blade"	Nm/m
typedef	^	OtherStateType	ReKi	V_DiskAvg	{3}	-	-	"disk-average relative wind speed"	m/s
typedef	^	OtherStateType	ReKi	V_dot_x	-	-	-
typedef	^	OtherStateType	MeshType	HubLoad	-	-	-	"mesh at hub; used to compute an integral for mapping the output blade loads to a single point (for writing to file only)"	-
typedef	^	OtherStateType	MeshMapType	B_L_2_H_P	{:}	-	-	"mapping data structure to map each bladeLoad output mesh to the OtherState%HubLoad mesh"
### Umass WINDS starts:
typedef	^	OtherStateType	IntKi	Aerodyn_Timestep	-	-	-
typedef	^	OtherStateType	IntKi	WINDS_Timestep	-	-	-	"Current timestep (counts from 1, while FAST counts from 0)  "
typedef	^	OtherStateType	FVM_OtherStateTYPE	FVM_Other
### Umass WINDS ends

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef	^	ParameterType	DbKi	DT	-	-	-	"Time step for continuous state integration & discrete state update"	seconds
typedef	^	ParameterType	IntKi	WakeMod	-	-	-	"Type of wake/induction model {0=none, 1=BEMT}"	-
typedef	^	ParameterType	IntKi	TwrPotent	-	-	-	"Type tower influence on wind based on potential flow around the tower {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}"	-
typedef	^	ParameterType	LOGICAL	TwrShadow	-	-	-	"Calculate tower influence on wind based on downstream tower shadow?"	-
typedef	^	ParameterType	LOGICAL	TwrAero	-	-	-	"Calculate tower aerodynamic loads?"	flag
typedef	^	ParameterType	IntKi	NumBlades	-	-	-	"Number of blades on the turbine"	-
typedef	^	ParameterType	IntKi	NumBlNds	-	-	-	"Number of nodes on each blade"	-
typedef	^	ParameterType	IntKi	NumTwrNds	-	-	-	"Number of nodes on the tower"	-
typedef	^	ParameterType	ReKi	TwrDiam	{:}	-	-	"Diameter of tower at node"	m
typedef	^	ParameterType	ReKi	TwrCd	{:}	-	-	"Coefficient of drag at tower node"	-
typedef	^	ParameterType	ReKi	AirDens	-	-	-	"Air density"	kg/m^3
typedef	^	ParameterType	ReKi	KinVisc	-	-	-	"Kinematic air viscosity"	m^2/s
typedef	^	ParameterType	ReKi	SpdSound	-	-	-	"Speed of sound"	m/s
typedef	^	ParameterType	AFI_ParameterType	AFI	-	-	-	"AirfoilInfo parameters"
typedef	^	ParameterType	BEMT_ParameterType	BEMT	-	-	-	"Parameters for BEMT module"
# parameters for output
typedef	^	ParameterType	IntKi	NumOuts	-	-	-	"Number of parameters in the output list (number of outputs requested)"	-
typedef	^	ParameterType	CHARACTER(1024)	RootName	-	-	-	"RootName for writing output files"	-
typedef	^	ParameterType	OutParmType	OutParam	{:}	-	-	"Names and units (and other characteristics) of all requested output parameters"	-
typedef	^	ParameterType	IntKi	NBlOuts	-	-	-	"Number of blade node outputs [0 - 9]"	-
typedef	^	ParameterType	IntKi	BlOutNd	{9}	-	-	"Blade nodes whose values will be output"	-
typedef	^	ParameterType	IntKi	NTwOuts	-	-	-	"Number of tower node outputs [0 - 9]"	-
typedef	^	ParameterType	IntKi	TwOutNd	{9}	-	-	"Tower nodes whose values will be output"	-
### Umass WINDS starts:
typedef	^	ParameterType	FVMParmsTYPE	FVM
typedef	^	ParameterType	IntKi	n_TMax_m1	-	-	-	"The time step of TMax - dt (the end time of the simulation)"
typedef	^	ParameterType	DbKi	Blade_TipRadius	-	-	-	
typedef	^	ParameterType	DbKi	Blade_HubRadius	-	-	-	
typedef	^	ParameterType	DbKi	Blade_RTrail	{:}	-	-	
typedef	^	ParameterType	DbKi	Blade_RNodes	{:}	-	-	"sum P%Blade%DR"
typedef ^	ParameterType	DbKi	Blade_AeroCen	{:}	-	-	"The relative location of aerodynamic center"
typedef ^	ParameterType	IntKi	AirFoil_NumFoil	-	-	-	"NumAFfiles"  
typedef	^	ParameterType	IntKi	AirFoil_NumCL	-	-	-	
typedef	^	ParameterType	CHARACTER(1024)	AirFoil_FoilNm	{:}			"Number of airfoil data sets"
### Umass WINDS ends 

# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
typedef	^	InputType	MeshType	TowerMotion	-	-	-	"motion on the tower"	-
typedef	^	InputType	MeshType	HubMotion	-	-	-	"motion on the hub"	-
typedef	^	InputType	MeshType	BladeRootMotion	{:}	-	-	"motion on each blade root"	-
typedef	^	InputType	MeshType	BladeMotion	{:}	-	-	"motion on each blade"	-
# Define inputs that are not on this mesh here:
typedef	^	InputType	ReKi	InflowOnBlade	{:}{:}{:}			"U,V,W at nodes on each blade (note if we change the requirement that NumNodes is the same for each blade, this will need to change)"	m/s
typedef	^	InputType	ReKi	InflowOnTower	{:}{:}			"U,V,W at nodes on the tower"	m/s

# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef	^	OutputType	MeshType	TowerLoad	-	-	-	"loads on the tower"	-
typedef	^	OutputType	MeshType	BladeLoad	{:}	-	-	"loads on each blade"	-
# Define outputs that are not on this mesh here:
typedef	^	OutputType	ReKi	WriteOutput	{:}	-	-	"Data to be written to an output file: see WriteOutputHdr for names of each variable"	"see WriteOutputUnt"
